# Generated by Django 5.0.4 on 2024-06-14 06:26

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('competition_management', '0018_delete_cupknockout'),
    ]

    operations = [
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_type', models.CharField(blank=True, choices=[('Round of 16', 'Round of 16'), ('Quarter Final', 'Quarter final'), ('Semi Final', 'Semi final'), ('Final', 'Final')], max_length=20, null=True)),
                ('match_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('location', models.CharField(blank=True, max_length=255)),
                ('away_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_matches', to='competition_management.team')),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='competition_management.competition')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='matches', to='competition_management.cupgroup')),
                ('home_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_matches', to='competition_management.team')),
                ('man_of_the_match', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='competition_management.player')),
            ],
        ),
        migrations.CreateModel(
            name='Injury',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minute', models.IntegerField()),
                ('severity', models.CharField(help_text='Brief description of the injury', max_length=255)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competition_management.player')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='injuries', to='match_management.match')),
            ],
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_own_goal', models.BooleanField(default=False)),
                ('minute', models.IntegerField()),
                ('assist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='goal_assisted', to='competition_management.player')),
                ('scorer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goal_scored', to='competition_management.player')),
                ('scoring_team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='competition_management.team')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goals', to='match_management.match')),
            ],
        ),
        migrations.CreateModel(
            name='Foul',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minute', models.IntegerField(help_text='Minute the foul occurred')),
                ('description', models.TextField(blank=True, help_text='Description of the foul, e.g., type of foul, consequences', null=True)),
                ('player_committed', models.ForeignKey(help_text='The player who committed the foul', on_delete=django.db.models.deletion.CASCADE, related_name='fouls_committed', to='competition_management.player')),
                ('player_suffered', models.ForeignKey(blank=True, help_text='The player who suffered the foul (optional)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fouls_suffered', to='competition_management.player')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fouls', to='match_management.match')),
            ],
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_type', models.CharField(choices=[('Y', 'Yellow'), ('R', 'Red')], max_length=1)),
                ('minute', models.IntegerField()),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competition_management.player')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cards', to='match_management.match')),
            ],
        ),
        migrations.CreateModel(
            name='MatchStatistic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('possession_percentage', models.IntegerField(default=0)),
                ('shots_on_goal', models.IntegerField(default=0)),
                ('total_shots', models.IntegerField(default=0)),
                ('fouls', models.IntegerField(default=0)),
                ('corners', models.IntegerField(default=0)),
                ('offsides', models.IntegerField(default=0)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statistics', to='match_management.match')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competition_management.team')),
            ],
        ),
        migrations.CreateModel(
            name='PenaltyShootout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minute', models.IntegerField(blank=True, null=True)),
                ('is_missed', models.BooleanField(default=False)),
                ('is_shootout', models.BooleanField(default=False)),
                ('match', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='penalties', to='match_management.match')),
                ('player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='penalty_attempts', to='competition_management.player')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='penalty_plays', to='competition_management.team')),
            ],
        ),
        migrations.CreateModel(
            name='Save',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minute', models.IntegerField(help_text='Minute the save was made')),
                ('goalkeeper', models.ForeignKey(limit_choices_to={'position': 'GK'}, on_delete=django.db.models.deletion.CASCADE, related_name='saves_made', to='competition_management.player')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saves', to='match_management.match')),
            ],
        ),
        migrations.CreateModel(
            name='Substitution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minute', models.IntegerField()),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='substitutions', to='match_management.match')),
                ('player_in', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='substituted_in', to='competition_management.player')),
                ('player_out', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='substituted_out', to='competition_management.player')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competition_management.team')),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('match', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='details', serialize=False, to='match_management.match')),
                ('attendance', models.IntegerField(blank=True, null=True)),
                ('home_team_score', models.PositiveIntegerField(default=0)),
                ('away_team_score', models.PositiveIntegerField(default=0)),
                ('added_time', models.IntegerField(default=0, help_text='Amount of added time in minutes')),
                ('completed', models.BooleanField(default=False)),
                ('shootout', models.BooleanField(default=False)),
                ('penalty_shootout', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='result', to='match_management.penaltyshootout')),
                ('referee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='competition_management.referee')),
            ],
        ),
    ]
